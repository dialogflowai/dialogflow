"use strict";class DialogFlowAiSDK{constructor(t){this.url=t.url,this.timeoutSec=t.timeoutSec||10,this.mainFlowId=t.mainFlowId,this.robotId=t.robotId,this.chatHistory=t.chatHistory||[],this.version=1,this.sessionId=t.sessionId||this.newSessionId(),this.importVariables=[],this.chatHasEnded=!1}VarKind=Object.freeze({STRING:"String",NUMBER:"Number"});UserInputResult=Object.freeze({SUCCESSFUL:"Successful",TIMEOUT:"Timeout"});MessageKind=Object.freeze({PLAIN_TEXT:"PlainText",RICH_TEXT:"RichText",IMAGE:"Timeout"});newSessionId(){return Date.now().toString()+Math.random().toString(16)}genRequestBody(t,e){const s=this;return{robotId:s.robotId,mainFlowId:s.mainFlowId,sessionId:this.sessionId,userInputResult:null,userInput:t||"",importVariables:s.importVariables.splice(0,s.importVariables.length),userInputIntent:e}}appendImportVariable(t,e,s){if(!this.VarKind[s])throw new Error(`Invalid variable kind: ${s}`);const n={varName:t,varType:s,varVal:e};this.importVariables.push(n)}correctData(t){if(!this.url)throw new Error("Missing parameter: url");if(!this.robotId)throw new Error("Missing parameter: robotId");if(!this.mainFlowId)throw new Error("Missing parameter: mainFlowId");if(null==t.sessionId)throw new Error("Missing parameter: sessionId");null==t.userInput&&(t.userInput=""),null==t.userInputResult&&(t.userInputResult=0==this.chatHistory.length||t.userInput.length>0?this.UserInputResult.SUCCESSFUL:this.UserInputResult.FAILED),null==t.importVariables&&(t.importVariables=[]),null!=t.userInputIntent&&""==t.userInputIntent&&(t.userInputIntent=null)}addChat(t,e,s,n){if(n&&n>-1){if(!(n>=this.chatHistory.length))return this.chatHistory[n].text+=t,n;for(let t=this.chatHistory.length;t<n;t++)this.chatHistory.push({id:"chat-"+Math.random().toString(16),text:"",cssClass:e,answerType:s})}return this.chatHistory.push({id:"chat-"+Math.random().toString(16),text:t.trimStart(),cssClass:e,answerType:s}),this.chatHistory.length-1}appendAnswers(t,e){if(console.log(t),200==t.status){console.log("data.nextAction:",t.data.nextAction);const s=t.data,n=s.answers;let r=-1;if(null!=n)for(let t=0;t<n.length;t++)r=this.addChat(n[t].content,"responseText",n[t].contentType,e);return"Terminate"===s.nextAction&&(this.chatHasEnded=!0),{chatIdx:r}}throw new Error(`Error: ${t.err.message}`)}async sendMessage(t){const e=this,s=e.genRequestBody(t.content,null);e.correctData(s),t.content&&e.addChat(t.content,"userText",t.type,-1);var n=new AbortController,r=setTimeout(function(){n.abort()},1e3*e.timeoutSec);console.log("Request body:",JSON.stringify(s));const o=await fetch(e.url,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s),signal:n.signal});if(clearTimeout(r),console.log("Response:",o),!o.ok)throw new Error("Network response was not ok");const a=o.headers.get("content-type")||"";if(a.includes("text/event-stream")||a.includes("application/x-ndjson")||a.includes("text/plain")){const t=o.body.getReader(),s=new TextDecoder("utf-8"),n=new ReadableStream({async start(e){for(;;){const{done:n,value:r}=await t.read();if(n)break;e.enqueue(s.decode(r,{stream:!0}))}e.close()}}),r=n.getReader();let{value:a,done:i}=await r.read(),l=-1;for(;!i;)console.log("chunk:",a),null!=a&&0!=a.trim().length&&(a.substring(1,a.length-1).split("}{").forEach(t=>{if(t.trim().length>0){console.log("line:",t);const s=JSON.parse("{"+t+"}");if(Object.hasOwn(s,"contentSeq")&&null!==s.contentSeq)e.appendAnswers({status:200,data:{answers:[{content:s.content}]}},s.contentSeq);else{const t=e.appendAnswers({status:200,data:JSON.parse(s.content)},l);l=t.chatIdx}}}),({value:a,done:i}=await r.read()))}else{const t=await o.json();console.log("Response data:",t),e.appendAnswers(t,-1)}}}export{DialogFlowAiSDK};